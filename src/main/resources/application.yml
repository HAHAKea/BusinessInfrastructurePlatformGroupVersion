server:
  contextPath: /bip
  port: 8080
  session:
    timeout: 3600 # 单位为秒
    cookie:
      max-age: 3600
  tomcat.max-threads: 0
  tomcat.uri-encoding: UTF-8

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/bip?characterEncoding=utf-8&useSSL=true
    username: root
    password:
    hikari:
      max-lifetime: 1765000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maximum-pool-size: 15 #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      minimum-idle: 5 #连接池中允许的最小闲置连接数
      connection-timeout: 60000 # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      idle-timeout: 600000 #一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    content-type: text/html; charset=utf-8
    cache: false
  mvc:
    static-path-pattern: /static/**
  cache:
    cache-names: es
    ehcache:
      config: classpath:ehcache.xml
  mail:
    host: smtp.sina.com
    username: xxxxxxxxxx@sina.com # 需根据具体情况进行修改，使用任何邮箱前都应该确认已经开启其POP3/SMTP服务
    password: xxxxxxxxxx          # 需根据具体邮件账号进行修改
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
#  session: #since spring boot 1.5.x
#    store-type: redis
#  redis:
#    host: localhost
#    password: 
#    port: 6379
    
logging:
  config: classpath:logback.xml
  
project:
  component:
    qrcode:
      width: 200 # 二维码宽度，如果不设置，默认400
      height: 200 # 二维码高度，如果不设置，默认400
      margin: 0 # 边框宽度，数字越大，边框越大
      suffix: .png # 生成的二维码格式
      defaultImage: /static/image/logo_qrcode.png # 默认附带图片相对路径
      reversalColor: false # 反转白色与黑色
  business:
    user:
      photoPath: D://bip//userfiles//user-photo
  base:
    filter:
      sensitive: false
    repository:
      provider: com.beamofsoul.bip.management.repository.BaseMultielementRepositoryFactory
      batch:
        size: 30
    security:
      # Specifies the URLs to be required to login as the roles "adminRoles" matched 
      adminRoleMatchers:
       - /admin/**
      # Any one of the roles to require for adminRoleMatchers
      # Each of the roles should not start with "ROLE_" as this is automatically inserted
      # 只有角色ADMIN 和 MANAGER 可以访问后台
      adminRoles:
        - ADMIN
        - MANAGER
        - NORMAL
      # Allows adding RequestMatcher instances that do not to be required to login
      nonAuthenticatedMatchers:
        - /**
      # Specifies the URL to send users to if login is required
      loginPage: /login
      # Specifies where users will go after authenticating successfully
      defaultLoginSuccessUrl: /
      # true if the defaultSuccesUrl should be used after authentication despite
      # if a protected page had been previously visited
      alwaysUseDefaultSuccessUrl: true
      # The URL that will invoke logout
      logoutUrl: /logout
      # The URL to redirect to after logout has occurred.
      # The default is "/login?logout". 
      defaultLogoutSuccessUrl: /login
      # Controls the maximum number of sessions for a user.
      # The default is to allow any number of users.
      maximumSessions: 1
      # If true, prevents a user from authenticating when the maximumSessions(int) has been reached.
      # Otherwise (default), the user who authenticates is allowed access 
      # and an existing user's session is expired. 
      # The user's who's session is forcibly expired is sent to expiredUrl(String).
      # The advantage of this approach is if a user accidentally does not log out,
      # there is no need for an administrator to intervene or wait till their session expires.
      maxSessionsPreventsLogin: false
      # The URL to redirect to if a user tries to access a resource 
      # and their session has been expired due to too many sessions for the current user. 
      expiredUrl: /expired
      # Allows specifying how long (in seconds) a token is valid for, set as one week, defualt is two weeks
      tokenValiditySeconds: 604800
      # The HTTP parameter used to indicate to remember the user at time of login.
      rememberMeParameter: remember-me
      # The name of cookie which store the token for remember me authentication.
      # Defaults to 'remember-me'.
      rememberMeCookieName: bip
      # Allows adding RequestMatcher instances that should that Spring Security should ignore.
      # Web Security provided by Spring Security (including the SecurityContext) 
      # will not be available on HttpServletRequest that match.
      # Typically the requests that are registered should be that of only static resources.
      # For requests that are dynamic, consider mapping the request to allow all users instead. 
      ignoringMatchers:
        - /static/**
        - /**/favicon.ico
